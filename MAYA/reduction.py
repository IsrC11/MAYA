# -*- coding: utf-8 -*-
"""reduction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ezP6Zc9JgtIXH8H1VDD_EEphiJh44M3N
"""

# maya/reduction.py
from sklearn.decomposition import PCA
from sklearn.manifold import TSNE, trustworthiness
from sklearn.metrics.pairwise import pairwise_distances
from scipy.stats import pearsonr
import numpy as np
from typing import Tuple, Dict

def apply_reduction(data: np.ndarray, method: str, **kwargs) -> Tuple[np.ndarray, Dict]:
    """Apply dimensionality reduction and compute metrics."""
    if method == 'PCA':
        pca = PCA(n_components=2)
        reduced = pca.fit_transform(data)
        metrics = {
            'exp_var': pca.explained_variance_ratio_,
            'trust': trustworthiness(data, reduced),
            'corr': pearsonr(pairwise_distances(data, metric='jaccard').ravel(),
                             pairwise_distances(reduced).ravel())[0]
        }
        return reduced, metrics
    elif method == 't-SNE':
        tsne = TSNE(n_components=2, metric='precomputed' if data.shape[0] < 10000 else 'euclidean', **kwargs)
        reduced = tsne.fit_transform(1 - data if tsne.metric == 'precomputed' else data)
        metrics = {
            'trust': trustworthiness(data, reduced),
            'corr': pearsonr(pairwise_distances(data, metric='jaccard').ravel(),
                             pairwise_distances(reduced).ravel())[0]
        }
        return reduced, metrics
    else:
        raise ValueError(f"Unknown reduction method: {method}")