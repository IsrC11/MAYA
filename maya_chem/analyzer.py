# -*- coding: utf-8 -*-
"""analyzer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1422NzblbjFYrvG3actiFnO1v4ULSkcy9
"""

# maya/analyzer.py
import pandas as pd
from .config import MayaConfig
from .utils import load_data
from . import utils, descriptors, similarity, reduction, visualization

class MayaAnalyzer:
    """Main class to run MAYA pipeline."""

    def __init__(self, config: MayaConfig):
        self.config = config
        self.data = None
        self.fps = None
        self.sim_matrix = None

    def load_data(self):
        self.data = utils.load_data(self.config.data_path)
        return self.data

    def compute_descriptors(self):
        self.data["Properties"] = self.data["Canonical_Smiles"].apply(descriptors.compute_physicochemical_properties)
        self.fps = [descriptors.compute_morgan_fingerprint(smi) for smi in self.data["Canonical_Smiles"]]
        return self.fps

    def compute_similarity(self):
        self.sim_matrix = similarity.compute_similarity_matrix(self.fps, self.config.n_jobs)
        return self.sim_matrix

    def reduce_dimensions(self):
        coords = reduction.apply_pca([fp.ToBitString() for fp in self.fps], n_components=2)
        self.data = pd.concat([self.data, coords], axis=1)
        return coords

    def visualize(self):
        visualization.plot_similarity_heatmap(self.sim_matrix, labels=self.data["ID"])
        visualization.plot_scatter(self.data, x="PC1", y="PC2", hue="MolWt")

    def run(self):
        df = load_data(self.config.data_path, id_col=self.config.data['id_col'], smiles_col=self.config.data['smiles_col'])
